{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayankkanoria/Documents/Personal/calculator/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Display from \"./Display\";\nimport ButtonGrid from \"./ButtonGrid\";\nimport calculate from \"../operations/calculate\";\nimport \"./App.css\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://127.0.0.1:4001\";\nlet socket;\n\nconst App = () => {\n  _s();\n\n  const [total, setTotal] = useState(0);\n  const [equation, updateEquation] = useState([]); //   const [response, setResponse] = useState(\"\");\n\n  const handleClick = buttonName => {\n    console.log(\"Click handler pressed \" + buttonName); // Calculate and update state as required\n\n    const expression = calculate({\n      total,\n      equation,\n      setTotal,\n      updateEquation\n    }, buttonName);\n\n    if (expression !== \"\") {\n      console.log(\"Solved \", expression);\n      socket.emit(\"data\", expression);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"In here\");\n    socket = socketIOClient(ENDPOINT);\n    socket.on(\"FromAPI\", data => {\n      console.log(\"Data received\", data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component-app\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      value: equation === undefined || equation.length === 0 ? total : equation.join(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGrid, {\n      clickHandler: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"jgjQgoYnCPP18FNxvGod61dzKHk=\");\n\n_c = App;\nexport default App; // import React, { useState, useEffect } from \"react\";\n// import socketIOClient from \"socket.io-client\";\n// const ENDPOINT = \"http://127.0.0.1:4001\";\n// function App() {\n//   const [response, setResponse] = useState(\"\");\n//   useEffect(() => {\n//     const socket = socketIOClient(ENDPOINT);\n//     socket.on(\"FromAPI\", (data) => {\n//       setResponse(data);\n//     });\n//   }, []);\n//   return (\n//     <p>\n//       It's <time dateTime={response}>{response}</time>\n//     </p>\n//   );\n// }\n// export default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mayankkanoria/Documents/Personal/calculator/src/components/App.jsx"],"names":["React","useState","useEffect","Display","ButtonGrid","calculate","socketIOClient","ENDPOINT","socket","App","total","setTotal","equation","updateEquation","handleClick","buttonName","console","log","expression","emit","on","data","undefined","length","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,IAAIC,MAAJ;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACW,QAAD,EAAWC,cAAX,IAA6BZ,QAAQ,CAAC,EAAD,CAA3C,CAFgB,CAGhB;;AAEA,QAAMa,WAAW,GAAIC,UAAD,IAAgB;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2BF,UAAvC,EADkC,CAElC;;AACA,UAAMG,UAAU,GAAGb,SAAS,CAC1B;AAAEK,MAAAA,KAAF;AAASE,MAAAA,QAAT;AAAmBD,MAAAA,QAAnB;AAA6BE,MAAAA;AAA7B,KAD0B,EAE1BE,UAF0B,CAA5B;;AAIA,QAAIG,UAAU,KAAK,EAAnB,EAAuB;AACrBF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,UAAvB;AACAV,MAAAA,MAAM,CAACW,IAAP,CAAY,MAAZ,EAAoBD,UAApB;AACD;AACF,GAXD;;AAaAhB,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAT,IAAAA,MAAM,GAAGF,cAAc,CAACC,QAAD,CAAvB;AACAC,IAAAA,MAAM,CAACY,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC7BL,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BI,IAA7B;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE,QAAC,OAAD;AACE,MAAA,KAAK,EACHT,QAAQ,KAAKU,SAAb,IAA0BV,QAAQ,CAACW,MAAT,KAAoB,CAA9C,GACIb,KADJ,GAEIE,QAAQ,CAACY,IAAT,CAAc,EAAd;AAJR;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEV;AAA1B;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtCD;;GAAML,G;;KAAAA,G;AAwCN,eAAeA,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Display from \"./Display\";\nimport ButtonGrid from \"./ButtonGrid\";\nimport calculate from \"../operations/calculate\";\nimport \"./App.css\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://127.0.0.1:4001\";\nlet socket;\nconst App = () => {\n  const [total, setTotal] = useState(0);\n  const [equation, updateEquation] = useState([]);\n  //   const [response, setResponse] = useState(\"\");\n\n  const handleClick = (buttonName) => {\n    console.log(\"Click handler pressed \" + buttonName);\n    // Calculate and update state as required\n    const expression = calculate(\n      { total, equation, setTotal, updateEquation },\n      buttonName\n    );\n    if (expression !== \"\") {\n      console.log(\"Solved \", expression);\n      socket.emit(\"data\", expression);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"In here\");\n    socket = socketIOClient(ENDPOINT);\n    socket.on(\"FromAPI\", (data) => {\n      console.log(\"Data received\", data);\n    });\n  }, []);\n\n  return (\n    <div className=\"component-app\">\n      <Display\n        value={\n          equation === undefined || equation.length === 0\n            ? total\n            : equation.join(\"\")\n        }\n      />\n      <ButtonGrid clickHandler={handleClick} />\n    </div>\n  );\n};\n\nexport default App;\n\n// import React, { useState, useEffect } from \"react\";\n// import socketIOClient from \"socket.io-client\";\n// const ENDPOINT = \"http://127.0.0.1:4001\";\n\n// function App() {\n//   const [response, setResponse] = useState(\"\");\n\n//   useEffect(() => {\n//     const socket = socketIOClient(ENDPOINT);\n//     socket.on(\"FromAPI\", (data) => {\n//       setResponse(data);\n//     });\n//   }, []);\n\n//   return (\n//     <p>\n//       It's <time dateTime={response}>{response}</time>\n//     </p>\n//   );\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}