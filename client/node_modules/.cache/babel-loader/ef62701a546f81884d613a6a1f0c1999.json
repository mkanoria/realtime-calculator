{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/mayankkanoria/Documents/Personal/calculator/src/components/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Display from \"./Display\";\nimport ButtonGrid from \"./ButtonGrid\";\nimport Join from \"./Join\";\nimport calculate from \"../operations/calculate\";\nimport \"./App.css\";\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://127.0.0.1:4001\";\nlet socket;\n\nconst App = () => {\n  _s();\n\n  const [total, setTotal] = useState(0);\n  const [equation, updateEquation] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const join = () => {\n    if (username !== \"\") {\n      setUsername(username);\n      console.log(\"responses\", responses);\n      socket.on(\"test\", data => {\n        console.log(data);\n      });\n      socket.on(\"new user\", resp => {\n        console.log(\"Got responses\", resp);\n        setResponses(resp);\n      });\n      console.log(\"responses\", responses);\n      setLoggedIn(true);\n    }\n  };\n\n  const handleClick = buttonName => {\n    // Calculate and update state as required\n    const expression = calculate({\n      total,\n      equation,\n      setTotal,\n      updateEquation\n    }, buttonName);\n\n    if (expression !== \"\") {\n      socket.emit(\"message\", {\n        user: username,\n        equation: expression\n      });\n      setResponses(prevResponses => {\n        if (prevResponses.length === 10) {\n          prevResponses.shift();\n        }\n\n        return [...prevResponses, {\n          user: username,\n          equation: expression\n        }];\n      });\n    }\n  };\n\n  useEffect(() => {\n    socket = socketIOClient(ENDPOINT); // If new message is broadcast, add it to list of existing responses\n\n    socket.on(\"new message\", data => {\n      setResponses(prevResponses => {\n        if (prevResponses.length === 10) {\n          prevResponses.shift();\n        }\n\n        return [...prevResponses, data];\n      });\n    });\n  }, []);\n\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"component-app\",\n      children: /*#__PURE__*/_jsxDEV(Join, {\n        join: join,\n        setName: setUsername\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component-app\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      value: equation === undefined || equation.length === 0 ? total : equation.join(\"\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGrid, {\n      clickHandler: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), responses.map((response, index) => /*#__PURE__*/_jsxDEV(Display, {\n      value: response.user + \" calculated \" + response.equation\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"somiaELzWWkiNTH4xz5MV1Jf5pI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/mayankkanoria/Documents/Personal/calculator/src/components/App.jsx"],"names":["React","useState","useEffect","Display","ButtonGrid","Join","calculate","socketIOClient","ENDPOINT","socket","App","total","setTotal","equation","updateEquation","responses","setResponses","username","setUsername","loggedIn","setLoggedIn","join","console","log","on","data","resp","handleClick","buttonName","expression","emit","user","prevResponses","length","shift","undefined","map","response","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Display from \"./Display\";\nimport ButtonGrid from \"./ButtonGrid\";\nimport Join from \"./Join\";\nimport calculate from \"../operations/calculate\";\nimport \"./App.css\";\nimport socketIOClient from \"socket.io-client\";\n\nconst ENDPOINT = \"http://127.0.0.1:4001\";\nlet socket;\nconst App = () => {\n  const [total, setTotal] = useState(0);\n  const [equation, updateEquation] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [username, setUsername] = useState(\"\");\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const join = () => {\n    if (username !== \"\") {\n      setUsername(username);\n      console.log(\"responses\", responses);\n      socket.on(\"test\", (data) => {\n        console.log(data);\n      });\n      socket.on(\"new user\", (resp) => {\n        console.log(\"Got responses\", resp);\n        setResponses(resp);\n      });\n      console.log(\"responses\", responses);\n      setLoggedIn(true);\n    }\n  };\n\n  const handleClick = (buttonName) => {\n    // Calculate and update state as required\n    const expression = calculate(\n      { total, equation, setTotal, updateEquation },\n      buttonName\n    );\n    if (expression !== \"\") {\n      socket.emit(\"message\", { user: username, equation: expression });\n      setResponses((prevResponses) => {\n        if (prevResponses.length === 10) {\n          prevResponses.shift();\n        }\n        return [...prevResponses, { user: username, equation: expression }];\n      });\n    }\n  };\n\n  useEffect(() => {\n    socket = socketIOClient(ENDPOINT);\n    // If new message is broadcast, add it to list of existing responses\n    socket.on(\"new message\", (data) => {\n      setResponses((prevResponses) => {\n        if (prevResponses.length === 10) {\n          prevResponses.shift();\n        }\n        return [...prevResponses, data];\n      });\n    });\n  }, []);\n\n  if (!loggedIn) {\n    return (\n      <div className=\"component-app\">\n        <Join join={join} setName={setUsername} />\n      </div>\n    );\n  }\n  return (\n    <div className=\"component-app\">\n      <Display\n        value={\n          equation === undefined || equation.length === 0\n            ? total\n            : equation.join(\"\")\n        }\n      />\n      <ButtonGrid clickHandler={handleClick} />\n      {responses.map((response, index) => (\n        <Display\n          key={index}\n          value={response.user + \" calculated \" + response.equation}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}