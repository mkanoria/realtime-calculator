{"ast":null,"code":"import { evaluate } from \"mathjs\";\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"Clear\") {\n    obj.updateEquation([]);\n  } else if (buttonName == \"DEL\") {} else if (buttonName === \"=\") {\n    // Do calculations\n    console.log(\"Calculating\"); // Create expression string\n\n    let expression = obj.equation.join(\"\"); // Reset equation\n\n    obj.updateEquation([]);\n    console.log(\"Expression is \", expression);\n    let result = evaluate(expression);\n    console.log(\"Result is: \", result);\n    obj.setTotal(result);\n  } else {\n    obj.updateEquation(oldEquation => [...oldEquation, buttonName]);\n  }\n}\n\nfunction isNumber(buttonName) {\n  return !isNaN(buttonName);\n} // Expecting object of the format\n//  {\n//     total : Number,\n//     nextVal: Number,\n//     operation: String,\n// }\n\n\nfunction tempCalculate(obj, buttonName) {\n  if (buttonName == \"AC\") {\n    return {\n      total: 0,\n      nextVal: 0,\n      operation: \"\"\n    };\n  } // If current button pressed was a number\n\n\n  if (isNumber(buttonName)) {\n    if (buttonName == \"0\" && obj.nextVal == \"0\") {\n      return {};\n    } // TODO: If there's an operation\n    // if (obj.operation) {\n    //     if (obj.nextVal) {\n    //         return {\n    //         }\n    //     }\n    // }\n\n\n    return {\n      total: 0,\n      nextVal: 0,\n      operation: \"\"\n    };\n  }\n\n  return {\n    total: 0,\n    nextVal: 0,\n    operation: \"\"\n  };\n}","map":{"version":3,"sources":["/Users/mayankkanoria/Documents/Personal/calculator/src/operations/calculate.js"],"names":["evaluate","calculate","obj","buttonName","updateEquation","console","log","expression","equation","join","result","setTotal","oldEquation","isNumber","isNaN","tempCalculate","total","nextVal","operation"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AAEA,eAAe,SAASC,SAAT,CAAmBC,GAAnB,EAAwBC,UAAxB,EAAoC;AACjD,MAAIA,UAAU,KAAK,OAAnB,EAA4B;AAC1BD,IAAAA,GAAG,CAACE,cAAJ,CAAmB,EAAnB;AACD,GAFD,MAEO,IAAID,UAAU,IAAI,KAAlB,EAAyB,CAC/B,CADM,MACA,IAAIA,UAAU,KAAK,GAAnB,EAAwB;AAC7B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAF6B,CAG7B;;AACA,QAAIC,UAAU,GAAGL,GAAG,CAACM,QAAJ,CAAaC,IAAb,CAAkB,EAAlB,CAAjB,CAJ6B,CAK7B;;AACAP,IAAAA,GAAG,CAACE,cAAJ,CAAmB,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,UAA9B;AACA,QAAIG,MAAM,GAAGV,QAAQ,CAACO,UAAD,CAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,MAA3B;AACAR,IAAAA,GAAG,CAACS,QAAJ,CAAaD,MAAb;AACD,GAXM,MAWA;AACLR,IAAAA,GAAG,CAACE,cAAJ,CAAoBQ,WAAD,IAAiB,CAAC,GAAGA,WAAJ,EAAiBT,UAAjB,CAApC;AACD;AACF;;AAED,SAASU,QAAT,CAAkBV,UAAlB,EAA8B;AAC5B,SAAO,CAACW,KAAK,CAACX,UAAD,CAAb;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,aAAT,CAAuBb,GAAvB,EAA4BC,UAA5B,EAAwC;AACtC,MAAIA,UAAU,IAAI,IAAlB,EAAwB;AACtB,WAAO;AACLa,MAAAA,KAAK,EAAE,CADF;AAELC,MAAAA,OAAO,EAAE,CAFJ;AAGLC,MAAAA,SAAS,EAAE;AAHN,KAAP;AAKD,GAPqC,CAQtC;;;AACA,MAAIL,QAAQ,CAACV,UAAD,CAAZ,EAA0B;AACxB,QAAIA,UAAU,IAAI,GAAd,IAAqBD,GAAG,CAACe,OAAJ,IAAe,GAAxC,EAA6C;AAC3C,aAAO,EAAP;AACD,KAHuB,CAIxB;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,WAAO;AACLD,MAAAA,KAAK,EAAE,CADF;AAELC,MAAAA,OAAO,EAAE,CAFJ;AAGLC,MAAAA,SAAS,EAAE;AAHN,KAAP;AAKD;;AACD,SAAO;AACLF,IAAAA,KAAK,EAAE,CADF;AAELC,IAAAA,OAAO,EAAE,CAFJ;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD","sourcesContent":["import { evaluate } from \"mathjs\";\n\nexport default function calculate(obj, buttonName) {\n  if (buttonName === \"Clear\") {\n    obj.updateEquation([]);\n  } else if (buttonName == \"DEL\") {\n  } else if (buttonName === \"=\") {\n    // Do calculations\n    console.log(\"Calculating\");\n    // Create expression string\n    let expression = obj.equation.join(\"\");\n    // Reset equation\n    obj.updateEquation([]);\n    console.log(\"Expression is \", expression);\n    let result = evaluate(expression);\n    console.log(\"Result is: \", result);\n    obj.setTotal(result);\n  } else {\n    obj.updateEquation((oldEquation) => [...oldEquation, buttonName]);\n  }\n}\n\nfunction isNumber(buttonName) {\n  return !isNaN(buttonName);\n}\n\n// Expecting object of the format\n//  {\n//     total : Number,\n//     nextVal: Number,\n//     operation: String,\n// }\nfunction tempCalculate(obj, buttonName) {\n  if (buttonName == \"AC\") {\n    return {\n      total: 0,\n      nextVal: 0,\n      operation: \"\",\n    };\n  }\n  // If current button pressed was a number\n  if (isNumber(buttonName)) {\n    if (buttonName == \"0\" && obj.nextVal == \"0\") {\n      return {};\n    }\n    // TODO: If there's an operation\n    // if (obj.operation) {\n    //     if (obj.nextVal) {\n    //         return {\n\n    //         }\n    //     }\n    // }\n    return {\n      total: 0,\n      nextVal: 0,\n      operation: \"\",\n    };\n  }\n  return {\n    total: 0,\n    nextVal: 0,\n    operation: \"\",\n  };\n}\n"]},"metadata":{},"sourceType":"module"}