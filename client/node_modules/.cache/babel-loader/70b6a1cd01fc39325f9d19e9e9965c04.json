{"ast":null,"code":"import { evaluate } from 'mathjs';\nexport default function calculate(obj, buttonName) {\n  if (buttonName == \"Clear\") {\n    obj.updateEquation([]);\n  } else if (buttonName == \"=\") {\n    // Do calculations\n    console.log(\"Calculating\"); // Create expression string\n\n    let expression = obj.equation.join(''); // Reset equation\n\n    obj.updateEquation([]);\n    console.log(\"Expression is \", expression);\n    let result = evaluate(expression);\n    console.log(\"Result is: \", result);\n    obj.setTotal(result);\n  } else {\n    obj.updateEquation(oldEquation => [...oldEquation, buttonName]);\n  }\n}\n\nfunction isNumber(buttonName) {\n  return !isNaN(buttonName);\n} // Expecting object of the format\n//  {\n//     total : Number,\n//     nextVal: Number,\n//     operation: String,\n// }\n\n\nfunction tempCalculate(obj, buttonName) {\n  if (buttonName == \"AC\") {\n    return {\n      total: 0,\n      nextVal: 0,\n      operation: \"\"\n    };\n  } // If current button pressed was a number\n\n\n  if (isNumber(buttonName)) {\n    if (buttonName == \"0\" && obj.nextVal == \"0\") {\n      return {};\n    } // TODO: If there's an operation\n    // if (obj.operation) {\n    //     if (obj.nextVal) {\n    //         return {\n    //         }\n    //     }\n    // }\n\n\n    return {\n      total: 0,\n      nextVal: 0,\n      operation: \"\"\n    };\n  }\n\n  return {\n    total: 0,\n    nextVal: 0,\n    operation: \"\"\n  };\n}","map":{"version":3,"sources":["/Users/mayankkanoria/Documents/Personal/calculator/src/operations/calculate.js"],"names":["evaluate","calculate","obj","buttonName","updateEquation","console","log","expression","equation","join","result","setTotal","oldEquation","isNumber","isNaN","tempCalculate","total","nextVal","operation"],"mappings":"AACA,SAAQA,QAAR,QAAuB,QAAvB;AAEA,eAAe,SAASC,SAAT,CAAoBC,GAApB,EAAyBC,UAAzB,EAAqC;AAChD,MAAIA,UAAU,IAAI,OAAlB,EAA2B;AACvBD,IAAAA,GAAG,CAACE,cAAJ,CAAmB,EAAnB;AACH,GAFD,MAEO,IAAID,UAAU,IAAI,GAAlB,EAAuB;AAC1B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAF0B,CAG1B;;AACA,QAAIC,UAAU,GAAGL,GAAG,CAACM,QAAJ,CAAaC,IAAb,CAAkB,EAAlB,CAAjB,CAJ0B,CAK1B;;AACAP,IAAAA,GAAG,CAACE,cAAJ,CAAmB,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,UAA9B;AACA,QAAIG,MAAM,GAAGV,QAAQ,CAACO,UAAD,CAArB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,MAA3B;AACAR,IAAAA,GAAG,CAACS,QAAJ,CAAaD,MAAb;AACH,GAXM,MAWA;AACHR,IAAAA,GAAG,CAACE,cAAJ,CAAoBQ,WAAD,IAAiB,CAAC,GAAGA,WAAJ,EAAiBT,UAAjB,CAApC;AACH;AACJ;;AAED,SAASU,QAAT,CAAkBV,UAAlB,EAA8B;AAC1B,SAAO,CAACW,KAAK,CAACX,UAAD,CAAb;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASY,aAAT,CAAwBb,GAAxB,EAA6BC,UAA7B,EAAyC;AACrC,MAAIA,UAAU,IAAI,IAAlB,EAAwB;AACpB,WAAO;AACHa,MAAAA,KAAK,EAAG,CADL;AAEHC,MAAAA,OAAO,EAAG,CAFP;AAGHC,MAAAA,SAAS,EAAG;AAHT,KAAP;AAKH,GAPoC,CAQrC;;;AACA,MAAIL,QAAQ,CAACV,UAAD,CAAZ,EAA0B;AACtB,QAAIA,UAAU,IAAI,GAAd,IAAqBD,GAAG,CAACe,OAAJ,IAAe,GAAxC,EAA6C;AACzC,aAAO,EAAP;AACH,KAHqB,CAItB;AACA;AACA;AACA;AAEA;AACA;AACA;;;AACA,WAAO;AACHD,MAAAA,KAAK,EAAG,CADL;AAEHC,MAAAA,OAAO,EAAG,CAFP;AAGHC,MAAAA,SAAS,EAAG;AAHT,KAAP;AAKH;;AACD,SAAO;AACHF,IAAAA,KAAK,EAAG,CADL;AAEHC,IAAAA,OAAO,EAAG,CAFP;AAGHC,IAAAA,SAAS,EAAG;AAHT,GAAP;AAKH","sourcesContent":["\nimport {evaluate} from 'mathjs'\n\nexport default function calculate (obj, buttonName) {\n    if (buttonName == \"Clear\") {\n        obj.updateEquation([])\n    } else if (buttonName == \"=\") {\n        // Do calculations\n        console.log(\"Calculating\")\n        // Create expression string\n        let expression = obj.equation.join('');\n        // Reset equation\n        obj.updateEquation([])\n        console.log(\"Expression is \", expression)\n        let result = evaluate(expression)\n        console.log(\"Result is: \", result)\n        obj.setTotal(result);\n    } else {\n        obj.updateEquation((oldEquation) => [...oldEquation, buttonName]);\n    }\n}\n\nfunction isNumber(buttonName) {\n    return !isNaN(buttonName)\n}\n\n// Expecting object of the format\n//  {\n//     total : Number,\n//     nextVal: Number,\n//     operation: String,\n// }\nfunction tempCalculate (obj, buttonName) {\n    if (buttonName == \"AC\") {\n        return {\n            total : 0,\n            nextVal : 0,\n            operation : \"\"\n        }\n    }\n    // If current button pressed was a number\n    if (isNumber(buttonName)) {\n        if (buttonName == \"0\" && obj.nextVal == \"0\") {\n            return {}\n        }\n        // TODO: If there's an operation\n        // if (obj.operation) {\n        //     if (obj.nextVal) {\n        //         return {\n                    \n        //         }\n        //     }\n        // }\n        return {\n            total : 0,\n            nextVal : 0,\n            operation : \"\"\n        }\n    }\n    return {\n        total : 0,\n        nextVal : 0,\n        operation : \"\"\n    }\n}"]},"metadata":{},"sourceType":"module"}